import sys
sys.stdout = open('output.txt', 'w')
sys.stdin = open('input.txt', 'r')
import pandas as pd
df = pd.read_csv("TrainA.csv")
df_orig = pd.read_csv("spc.csv")
df2 = pd.read_csv("TestA.csv")
# print(df.head())

#below are the columns of training dataset
X=df[['DPC1_AA','DPC1_AC','DPC1_AD','DPC1_AE','DPC1_AF','DPC1_AG','DPC1_AH','DPC1_AI','DPC1_AK','DPC1_AL','DPC1_AM','DPC1_AN','DPC1_AP','DPC1_AQ','DPC1_AR','DPC1_AS','DPC1_AT','DPC1_AV','DPC1_AW','DPC1_AY','DPC1_CA','DPC1_CC','DPC1_CD','DPC1_CE','DPC1_CF','DPC1_CG','DPC1_CH','DPC1_CI','DPC1_CK','DPC1_CL','DPC1_CM','DPC1_CN','DPC1_CP','DPC1_CQ','DPC1_CR','DPC1_CS','DPC1_CT','DPC1_CV','DPC1_CW','DPC1_CY','DPC1_DA','DPC1_DC','DPC1_DD','DPC1_DE','DPC1_DF','DPC1_DG','DPC1_DH','DPC1_DI','DPC1_DK','DPC1_DL','DPC1_DM','DPC1_DN','DPC1_DP','DPC1_DQ','DPC1_DR','DPC1_DS','DPC1_DT','DPC1_DV','DPC1_DW','DPC1_DY','DPC1_EA','DPC1_EC','DPC1_ED','DPC1_EE','DPC1_EF','DPC1_EG','DPC1_EH','DPC1_EI','DPC1_EK','DPC1_EL','DPC1_EM','DPC1_EN','DPC1_EP','DPC1_EQ','DPC1_ER','DPC1_ES','DPC1_ET','DPC1_EV','DPC1_EW','DPC1_EY','DPC1_FA','DPC1_FC','DPC1_FD','DPC1_FE','DPC1_FF','DPC1_FG','DPC1_FH','DPC1_FI','DPC1_FK','DPC1_FL','DPC1_FM','DPC1_FN','DPC1_FP','DPC1_FQ','DPC1_FR','DPC1_FS','DPC1_FT','DPC1_FV','DPC1_FW','DPC1_FY','DPC1_GA','DPC1_GC','DPC1_GD','DPC1_GE','DPC1_GF','DPC1_GG','DPC1_GH','DPC1_GI','DPC1_GK','DPC1_GL','DPC1_GM','DPC1_GN','DPC1_GP','DPC1_GQ','DPC1_GR','DPC1_GS','DPC1_GT','DPC1_GV','DPC1_GW','DPC1_GY','DPC1_HA','DPC1_HC','DPC1_HD','DPC1_HE','DPC1_HF','DPC1_HG','DPC1_HH','DPC1_HI','DPC1_HK','DPC1_HL','DPC1_HM','DPC1_HN','DPC1_HP','DPC1_HQ','DPC1_HR','DPC1_HS','DPC1_HT','DPC1_HV','DPC1_HW','DPC1_HY','DPC1_IA','DPC1_IC','DPC1_ID','DPC1_IE','DPC1_IF','DPC1_IG','DPC1_IH','DPC1_II','DPC1_IK','DPC1_IL','DPC1_IM','DPC1_IN','DPC1_IP','DPC1_IQ','DPC1_IR','DPC1_IS','DPC1_IT','DPC1_IV','DPC1_IW','DPC1_IY','DPC1_KA','DPC1_KC','DPC1_KD','DPC1_KE','DPC1_KF','DPC1_KG','DPC1_KH','DPC1_KI','DPC1_KK','DPC1_KL','DPC1_KM','DPC1_KN','DPC1_KP','DPC1_KQ','DPC1_KR','DPC1_KS','DPC1_KT','DPC1_KV','DPC1_KW','DPC1_KY','DPC1_LA','DPC1_LC','DPC1_LD','DPC1_LE','DPC1_LF','DPC1_LG','DPC1_LH','DPC1_LI','DPC1_LK','DPC1_LL','DPC1_LM','DPC1_LN','DPC1_LP','DPC1_LQ','DPC1_LR','DPC1_LS','DPC1_LT','DPC1_LV','DPC1_LW','DPC1_LY','DPC1_MA','DPC1_MC','DPC1_MD','DPC1_ME','DPC1_MF','DPC1_MG','DPC1_MH','DPC1_MI','DPC1_MK','DPC1_ML','DPC1_MM','DPC1_MN','DPC1_MP','DPC1_MQ','DPC1_MR','DPC1_MS','DPC1_MT','DPC1_MV','DPC1_MW','DPC1_MY','DPC1_NA','DPC1_NC','DPC1_ND','DPC1_NE','DPC1_NF','DPC1_NG','DPC1_NH','DPC1_NI','DPC1_NK','DPC1_NL','DPC1_NM','DPC1_NN','DPC1_NP','DPC1_NQ','DPC1_NR','DPC1_NS','DPC1_NT','DPC1_NV','DPC1_NW','DPC1_NY','DPC1_PA','DPC1_PC','DPC1_PD','DPC1_PE','DPC1_PF','DPC1_PG','DPC1_PH','DPC1_PI','DPC1_PK','DPC1_PL','DPC1_PM','DPC1_PN','DPC1_PP','DPC1_PQ','DPC1_PR','DPC1_PS','DPC1_PT','DPC1_PV','DPC1_PW','DPC1_PY','DPC1_QA','DPC1_QC','DPC1_QD','DPC1_QE','DPC1_QF','DPC1_QG','DPC1_QH','DPC1_QI','DPC1_QK','DPC1_QL','DPC1_QM','DPC1_QN','DPC1_QP','DPC1_QQ','DPC1_QR','DPC1_QS','DPC1_QT','DPC1_QV','DPC1_QW','DPC1_QY','DPC1_RA','DPC1_RC','DPC1_RD','DPC1_RE','DPC1_RF','DPC1_RG','DPC1_RH','DPC1_RI','DPC1_RK','DPC1_RL','DPC1_RM','DPC1_RN','DPC1_RP','DPC1_RQ','DPC1_RR','DPC1_RS','DPC1_RT','DPC1_RV','DPC1_RW','DPC1_RY','DPC1_SA','DPC1_SC','DPC1_SD','DPC1_SE','DPC1_SF','DPC1_SG','DPC1_SH','DPC1_SI','DPC1_SK','DPC1_SL','DPC1_SM','DPC1_SN','DPC1_SP','DPC1_SQ','DPC1_SR','DPC1_SS','DPC1_ST','DPC1_SV','DPC1_SW','DPC1_SY','DPC1_TA','DPC1_TC','DPC1_TD','DPC1_TE','DPC1_TF','DPC1_TG','DPC1_TH','DPC1_TI','DPC1_TK','DPC1_TL','DPC1_TM','DPC1_TN','DPC1_TP','DPC1_TQ','DPC1_TR','DPC1_TS','DPC1_TT','DPC1_TV','DPC1_TW','DPC1_TY','DPC1_VA','DPC1_VC','DPC1_VD','DPC1_VE','DPC1_VF','DPC1_VG','DPC1_VH','DPC1_VI','DPC1_VK','DPC1_VL','DPC1_VM','DPC1_VN','DPC1_VP','DPC1_VQ','DPC1_VR','DPC1_VS','DPC1_VT','DPC1_VV','DPC1_VW','DPC1_VY','DPC1_WA','DPC1_WC','DPC1_WD','DPC1_WE','DPC1_WF','DPC1_WG','DPC1_WH','DPC1_WI','DPC1_WK','DPC1_WL','DPC1_WM','DPC1_WN','DPC1_WP','DPC1_WQ','DPC1_WR','DPC1_WS','DPC1_WT','DPC1_WV','DPC1_WW','DPC1_WY','DPC1_YA','DPC1_YC','DPC1_YD','DPC1_YE','DPC1_YF','DPC1_YG','DPC1_YH','DPC1_YI','DPC1_YK','DPC1_YL','DPC1_YM','DPC1_YN','DPC1_YP','DPC1_YQ','DPC1_YR','DPC1_YS','DPC1_YT','DPC1_YV','DPC1_YW','DPC1_YY','AAC_A','AAC_C','AAC_D','AAC_E','AAC_F','AAC_G','AAC_H','AAC_I','AAC_K','AAC_L','AAC_M','AAC_N','AAC_P','AAC_Q','AAC_R','AAC_S','AAC_T','AAC_V','AAC_W','AAC_Y','SEP_PC','SEP_NC','SEP_NE','SEP_PO','SEP_NP','SEP_AL','SEP_CY','SEP_AR','SEP_AC','SEP_BS','SEP_NE_pH','SEP_HB','SEP_HL','SEP_NT','SEP_HX','SEP_SC','SEP_SS_HE','SEP_SS_ST','SEP_SS_CO','SEP_SA_BU','SEP_SA_EX','SEP_SA_IN','SEP_TN','SEP_SM','SEP_LR']]
X_test=df2[['DPC1_AA','DPC1_AC','DPC1_AD','DPC1_AE','DPC1_AF','DPC1_AG','DPC1_AH','DPC1_AI','DPC1_AK','DPC1_AL','DPC1_AM','DPC1_AN','DPC1_AP','DPC1_AQ','DPC1_AR','DPC1_AS','DPC1_AT','DPC1_AV','DPC1_AW','DPC1_AY','DPC1_CA','DPC1_CC','DPC1_CD','DPC1_CE','DPC1_CF','DPC1_CG','DPC1_CH','DPC1_CI','DPC1_CK','DPC1_CL','DPC1_CM','DPC1_CN','DPC1_CP','DPC1_CQ','DPC1_CR','DPC1_CS','DPC1_CT','DPC1_CV','DPC1_CW','DPC1_CY','DPC1_DA','DPC1_DC','DPC1_DD','DPC1_DE','DPC1_DF','DPC1_DG','DPC1_DH','DPC1_DI','DPC1_DK','DPC1_DL','DPC1_DM','DPC1_DN','DPC1_DP','DPC1_DQ','DPC1_DR','DPC1_DS','DPC1_DT','DPC1_DV','DPC1_DW','DPC1_DY','DPC1_EA','DPC1_EC','DPC1_ED','DPC1_EE','DPC1_EF','DPC1_EG','DPC1_EH','DPC1_EI','DPC1_EK','DPC1_EL','DPC1_EM','DPC1_EN','DPC1_EP','DPC1_EQ','DPC1_ER','DPC1_ES','DPC1_ET','DPC1_EV','DPC1_EW','DPC1_EY','DPC1_FA','DPC1_FC','DPC1_FD','DPC1_FE','DPC1_FF','DPC1_FG','DPC1_FH','DPC1_FI','DPC1_FK','DPC1_FL','DPC1_FM','DPC1_FN','DPC1_FP','DPC1_FQ','DPC1_FR','DPC1_FS','DPC1_FT','DPC1_FV','DPC1_FW','DPC1_FY','DPC1_GA','DPC1_GC','DPC1_GD','DPC1_GE','DPC1_GF','DPC1_GG','DPC1_GH','DPC1_GI','DPC1_GK','DPC1_GL','DPC1_GM','DPC1_GN','DPC1_GP','DPC1_GQ','DPC1_GR','DPC1_GS','DPC1_GT','DPC1_GV','DPC1_GW','DPC1_GY','DPC1_HA','DPC1_HC','DPC1_HD','DPC1_HE','DPC1_HF','DPC1_HG','DPC1_HH','DPC1_HI','DPC1_HK','DPC1_HL','DPC1_HM','DPC1_HN','DPC1_HP','DPC1_HQ','DPC1_HR','DPC1_HS','DPC1_HT','DPC1_HV','DPC1_HW','DPC1_HY','DPC1_IA','DPC1_IC','DPC1_ID','DPC1_IE','DPC1_IF','DPC1_IG','DPC1_IH','DPC1_II','DPC1_IK','DPC1_IL','DPC1_IM','DPC1_IN','DPC1_IP','DPC1_IQ','DPC1_IR','DPC1_IS','DPC1_IT','DPC1_IV','DPC1_IW','DPC1_IY','DPC1_KA','DPC1_KC','DPC1_KD','DPC1_KE','DPC1_KF','DPC1_KG','DPC1_KH','DPC1_KI','DPC1_KK','DPC1_KL','DPC1_KM','DPC1_KN','DPC1_KP','DPC1_KQ','DPC1_KR','DPC1_KS','DPC1_KT','DPC1_KV','DPC1_KW','DPC1_KY','DPC1_LA','DPC1_LC','DPC1_LD','DPC1_LE','DPC1_LF','DPC1_LG','DPC1_LH','DPC1_LI','DPC1_LK','DPC1_LL','DPC1_LM','DPC1_LN','DPC1_LP','DPC1_LQ','DPC1_LR','DPC1_LS','DPC1_LT','DPC1_LV','DPC1_LW','DPC1_LY','DPC1_MA','DPC1_MC','DPC1_MD','DPC1_ME','DPC1_MF','DPC1_MG','DPC1_MH','DPC1_MI','DPC1_MK','DPC1_ML','DPC1_MM','DPC1_MN','DPC1_MP','DPC1_MQ','DPC1_MR','DPC1_MS','DPC1_MT','DPC1_MV','DPC1_MW','DPC1_MY','DPC1_NA','DPC1_NC','DPC1_ND','DPC1_NE','DPC1_NF','DPC1_NG','DPC1_NH','DPC1_NI','DPC1_NK','DPC1_NL','DPC1_NM','DPC1_NN','DPC1_NP','DPC1_NQ','DPC1_NR','DPC1_NS','DPC1_NT','DPC1_NV','DPC1_NW','DPC1_NY','DPC1_PA','DPC1_PC','DPC1_PD','DPC1_PE','DPC1_PF','DPC1_PG','DPC1_PH','DPC1_PI','DPC1_PK','DPC1_PL','DPC1_PM','DPC1_PN','DPC1_PP','DPC1_PQ','DPC1_PR','DPC1_PS','DPC1_PT','DPC1_PV','DPC1_PW','DPC1_PY','DPC1_QA','DPC1_QC','DPC1_QD','DPC1_QE','DPC1_QF','DPC1_QG','DPC1_QH','DPC1_QI','DPC1_QK','DPC1_QL','DPC1_QM','DPC1_QN','DPC1_QP','DPC1_QQ','DPC1_QR','DPC1_QS','DPC1_QT','DPC1_QV','DPC1_QW','DPC1_QY','DPC1_RA','DPC1_RC','DPC1_RD','DPC1_RE','DPC1_RF','DPC1_RG','DPC1_RH','DPC1_RI','DPC1_RK','DPC1_RL','DPC1_RM','DPC1_RN','DPC1_RP','DPC1_RQ','DPC1_RR','DPC1_RS','DPC1_RT','DPC1_RV','DPC1_RW','DPC1_RY','DPC1_SA','DPC1_SC','DPC1_SD','DPC1_SE','DPC1_SF','DPC1_SG','DPC1_SH','DPC1_SI','DPC1_SK','DPC1_SL','DPC1_SM','DPC1_SN','DPC1_SP','DPC1_SQ','DPC1_SR','DPC1_SS','DPC1_ST','DPC1_SV','DPC1_SW','DPC1_SY','DPC1_TA','DPC1_TC','DPC1_TD','DPC1_TE','DPC1_TF','DPC1_TG','DPC1_TH','DPC1_TI','DPC1_TK','DPC1_TL','DPC1_TM','DPC1_TN','DPC1_TP','DPC1_TQ','DPC1_TR','DPC1_TS','DPC1_TT','DPC1_TV','DPC1_TW','DPC1_TY','DPC1_VA','DPC1_VC','DPC1_VD','DPC1_VE','DPC1_VF','DPC1_VG','DPC1_VH','DPC1_VI','DPC1_VK','DPC1_VL','DPC1_VM','DPC1_VN','DPC1_VP','DPC1_VQ','DPC1_VR','DPC1_VS','DPC1_VT','DPC1_VV','DPC1_VW','DPC1_VY','DPC1_WA','DPC1_WC','DPC1_WD','DPC1_WE','DPC1_WF','DPC1_WG','DPC1_WH','DPC1_WI','DPC1_WK','DPC1_WL','DPC1_WM','DPC1_WN','DPC1_WP','DPC1_WQ','DPC1_WR','DPC1_WS','DPC1_WT','DPC1_WV','DPC1_WW','DPC1_WY','DPC1_YA','DPC1_YC','DPC1_YD','DPC1_YE','DPC1_YF','DPC1_YG','DPC1_YH','DPC1_YI','DPC1_YK','DPC1_YL','DPC1_YM','DPC1_YN','DPC1_YP','DPC1_YQ','DPC1_YR','DPC1_YS','DPC1_YT','DPC1_YV','DPC1_YW','DPC1_YY','AAC_A','AAC_C','AAC_D','AAC_E','AAC_F','AAC_G','AAC_H','AAC_I','AAC_K','AAC_L','AAC_M','AAC_N','AAC_P','AAC_Q','AAC_R','AAC_S','AAC_T','AAC_V','AAC_W','AAC_Y','SEP_PC','SEP_NC','SEP_NE','SEP_PO','SEP_NP','SEP_AL','SEP_CY','SEP_AR','SEP_AC','SEP_BS','SEP_NE_pH','SEP_HB','SEP_HL','SEP_NT','SEP_HX','SEP_SC','SEP_SS_HE','SEP_SS_ST','SEP_SS_CO','SEP_SA_BU','SEP_SA_EX','SEP_SA_IN','SEP_TN','SEP_SM','SEP_LR']]

y = df_orig.Label


# from sklearn.model_selection import train_test_split
# X_train, X_test, y_train, y_test = train_test_split(X,y,test_size=0.25)


#from sklearn.ensemble import RandomForestClassifier
#clf = RandomForestClassifier()
#clf = LogisticRegression()
#clf.fit(X_train, y_train)
#print(X_test)
from sklearn.model_selection import GridSearchCV
from sklearn.svm import SVC
# defining parameter range
#------------------------------
from sklearn.model_selection import GridSearchCV
  
# defining parameter range
param_grid = {'C': [1,10,100], 
              'kernel': ['poly','rbf']} 
  
grid = GridSearchCV(SVC(), param_grid, refit = True, verbose = 5)
# grid = GridSearchCV(SVC(), param_grid)

  
# fitting the model for grid search
grid.fit(X, y)
#--------------------------------------------

# print(grid.predict(X_test)) 

import csv
cntr = 10001
with open('Answer.csv','w',newline= '') as f:
    thewriter = csv.writer(f)
    for i in grid.predict(X_test):
        thewriter.writerow([cntr,i])
        cntr+=1


# print(grid.best_params_)
# print(grid.score(X_train, y_train))

# print(grid.score(X_test, y_test))